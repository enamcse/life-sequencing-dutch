[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"


[tool.pytest.ini_options]
testpaths = [
    "pop2vec/llm/tests/",
    "pop2vec/evaluation/tests/",
    "pop2vec/graph/tests/",
    "pop2vec/fake_data/tests/"
]

[tool.ruff]
line-length = 120
output-format = "concise"


[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Enable Pyflakes `E` and `F` codes by default.
select = ["ALL"]
ignore = [
    "ANN101", # Missing type annotation for `self` in method
    "ANN102", # Missing type annotation for `cls` in classmethod
    "ANN204", # Missing return type annotation for special (dunder) method
    "FBT",    # Using boolean function arguments
    "TD",     # TODOs
    "FIX001", # Resolve FIXMEs
    "FIX002", # Resolve TODOs
    "B028",   # No explicit `stacklevel` keyword argument found in warning
    # No docstrings required in the following cases
    "D100", # Missing module docstring
    "D104", # Missing public package docstring
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in `__init__`
    "COM812", # suggested by ruff
    "ISC001", # suggested by ruff
    # TODO: discuss
    # disabled for now; enable later
    "ANN001", # Missing function argument type
    "ANN201", # Missing return type
]
pydocstyle.convention = "google"

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = ["F401"] # unused imports (should not disappear while editing)
extend-safe-fixes = [
    "D415",   # First line should end with a period, question mark, or exclamation point
    "D300",   # Use triple double quotes `"""`
    "D200",   # One-line docstring should fit on one line
    "TCH",    # Format type checking only imports
    "ISC001", # Implicitly concatenated strings on a single line
    "EM",     # Exception message variables
    "RUF013", # Implicit Optional
    "B006",   # Mutable default argument
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101",   # Use of `assert` detected
    "PT011",  # pytest-raises-too-broad
    "ANN001", # Missing function argument type
    "ANN201", # Missing return type
    "D103",   # Missing function docstring
    "ANN401", # Function arguments annotated with too generic `Any` type
    "SLF001", # Private member access
]
"docs/conf.py" = [
    "INP001", # Add __init__.py to implicit namespace package
    "ERA001", # Commented-out code
    "A001",   # Shadowing Python builtin name, specifically `copyright`
]

[tool.ruff.lint.isort]
force-single-line = true
no-lines-before = ["future","standard-library","third-party","first-party","local-folder"]
